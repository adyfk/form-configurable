import { ExpressionThunk, ExpressionValue } from "./expression";
export declare const callbackShouldAThunk: (func: ExpressionValue) => func is ExpressionThunk;
export declare const num: (result: ExpressionValue) => number;
export declare const array: (result: ExpressionValue) => import("./expression").ExpressionValueArray;
export declare const bool: (value: ExpressionValue) => boolean;
export declare const obj: (obj: ExpressionValue) => import("./expression").ExpressionObject;
export declare const iterable: (result: ExpressionValue) => string | import("./expression").ExpressionThunkArray | import("./expression").ExpressionValueArray;
export declare const string: (result: ExpressionValue) => string;
export declare const char: (result: ExpressionValue) => string;
export declare const date: (result: ExpressionValue) => Date;
export declare const evalString: (value: ExpressionValue) => string;
export declare const evalBool: (value: ExpressionValue) => boolean;
export declare const evalArray: (arr: ExpressionValue, typeCheck?: ExpressionThunk) => ExpressionValue[];
